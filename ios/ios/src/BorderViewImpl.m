//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSCSSBorderPlugin\src\main\java\com\ashera\cssborder\BorderViewImpl.java
//

#include "BorderViewImpl.h"
#include "IAttributable.h"
#include "ILifeCycleDecorator.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "View.h"
#include "WidgetAttribute.h"
#include "WidgetFactory.h"

#include <UIKit/UIKit.h>
#include "ASUIView.h"


@interface ASBorderViewImpl () {
 @public
  id<ASIWidget> w_;
}

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget;

@end

J2OBJC_FIELD_SETTER(ASBorderViewImpl, w_, id<ASIWidget>)

__attribute__((unused)) static void ASBorderViewImpl_initWithASIWidget_(ASBorderViewImpl *self, id<ASIWidget> widget);

__attribute__((unused)) static ASBorderViewImpl *new_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget) NS_RETURNS_RETAINED;

__attribute__((unused)) static ASBorderViewImpl *create_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget);

NSString *ASBorderViewImpl_LOCAL_NAME = @"BorderView";

@implementation ASBorderViewImpl

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget {
  ASBorderViewImpl_initWithASIWidget_(self, widget);
  return self;
}

- (NSString *)getLocalName {
  return ASBorderViewImpl_LOCAL_NAME;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASBorderViewImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<ASIAttributable>)newInstanceWithASIWidget:(id<ASIWidget>)widget {
  ASBorderViewImpl *newIntance = new_ASBorderViewImpl_initWithASIWidget_(widget);
  return newIntance;
}

- (void)loadAttributesWithNSString:(NSString *)localName {
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopLeftRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderTopRightRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomLeftRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderBottomRightRadius"])) withTypeWithNSString:@"dimensionfloat"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderLeftDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightColor"])) withTypeWithNSString:@"colorstate"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightStyle"])) withTypeWithNSString:@"string"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightDashWidth"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"borderRightDashSpacing"])) withTypeWithNSString:@"dimension"])) withDecoratorWithNSString:@"border"])) withUiFlagWithInt:ASIWidget_UPDATE_UI_REQUEST_LAYOUT_N_INVALIDATE]);
}

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w_)) asWidget], [ADView class]);
  id nativeWidget = [((id<ASIWidget>) nil_chk(w_)) asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"borderWidth", @"borderColor", @"borderStyle", @"borderDashWidth", @"borderDashSpacing", @"borderRadius", @"borderTopWidth", @"borderTopColor", @"borderTopStyle", @"borderTopDashWidth", @"borderTopDashSpacing", @"borderTopLeftRadius", @"borderTopRightRadius", @"borderBottomWidth", @"borderBottomColor", @"borderBottomStyle", @"borderBottomDashWidth", @"borderBottomDashSpacing", @"borderBottomLeftRadius", @"borderBottomRightRadius", @"borderLeftWidth", @"borderLeftColor", @"borderLeftStyle", @"borderLeftDashWidth", @"borderLeftDashSpacing", @"borderRightWidth", @"borderRightColor", @"borderRightStyle", @"borderRightDashWidth", @"borderRightDashSpacing" }, 30)) {
    case 0:
    {
    }
    break;
    case 1:
    {
    }
    break;
    case 2:
    {
    }
    break;
    case 3:
    {
    }
    break;
    case 4:
    {
    }
    break;
    case 5:
    {
    }
    break;
    case 6:
    {
    }
    break;
    case 7:
    {
    }
    break;
    case 8:
    {
    }
    break;
    case 9:
    {
    }
    break;
    case 10:
    {
    }
    break;
    case 11:
    {
    }
    break;
    case 12:
    {
    }
    break;
    case 13:
    {
    }
    break;
    case 14:
    {
    }
    break;
    case 15:
    {
    }
    break;
    case 16:
    {
    }
    break;
    case 17:
    {
    }
    break;
    case 18:
    {
    }
    break;
    case 19:
    {
    }
    break;
    case 20:
    {
    }
    break;
    case 21:
    {
    }
    break;
    case 22:
    {
    }
    break;
    case 23:
    {
    }
    break;
    case 24:
    {
    }
    break;
    case 25:
    {
    }
    break;
    case 26:
    {
    }
    break;
    case 27:
    {
    }
    break;
    case 28:
    {
    }
    break;
    case 29:
    {
    }
    break;
    default:
    break;
  }
}

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ADView *view = (ADView *) cast_chk([((id<ASIWidget>) nil_chk(w_)) asWidget], [ADView class]);
  id nativeWidget = [((id<ASIWidget>) nil_chk(w_)) asNativeWidget];
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"borderTopWidth", @"borderTopColor", @"borderTopStyle", @"borderTopDashWidth", @"borderTopDashSpacing", @"borderTopLeftRadius", @"borderTopRightRadius", @"borderBottomWidth", @"borderBottomColor", @"borderBottomStyle", @"borderBottomDashWidth", @"borderBottomDashSpacing", @"borderBottomLeftRadius", @"borderBottomRightRadius", @"borderLeftWidth", @"borderLeftColor", @"borderLeftStyle", @"borderLeftDashWidth", @"borderLeftDashSpacing", @"borderRightWidth", @"borderRightColor", @"borderRightStyle", @"borderRightDashWidth", @"borderRightDashSpacing" }, 24)) {
    case 0:
    {
      return nil;
    }
    case 1:
    {
      return nil;
    }
    case 2:
    {
      return nil;
    }
    case 3:
    {
      return nil;
    }
    case 4:
    {
      return nil;
    }
    case 5:
    {
      return nil;
    }
    case 6:
    {
      return nil;
    }
    case 7:
    {
      return nil;
    }
    case 8:
    {
      return nil;
    }
    case 9:
    {
      return nil;
    }
    case 10:
    {
      return nil;
    }
    case 11:
    {
      return nil;
    }
    case 12:
    {
      return nil;
    }
    case 13:
    {
      return nil;
    }
    case 14:
    {
      return nil;
    }
    case 15:
    {
      return nil;
    }
    case 16:
    {
      return nil;
    }
    case 17:
    {
      return nil;
    }
    case 18:
    {
      return nil;
    }
    case 19:
    {
      return nil;
    }
    case 20:
    {
      return nil;
    }
    case 21:
    {
      return nil;
    }
    case 22:
    {
      return nil;
    }
    case 23:
    {
      return nil;
    }
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LASIAttributable;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithASIWidget:);
  methods[1].selector = @selector(getLocalName);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(newInstanceWithASIWidget:);
  methods[4].selector = @selector(loadAttributesWithNSString:);
  methods[5].selector = @selector(setAttributeWithASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[6].selector = @selector(getAttributeWithASWidgetAttribute:withASILifeCycleDecorator:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOCAL_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "w_", "LASIWidget;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LASIWidget;", "newInstance", "loadAttributes", "LNSString;", "setAttribute", "LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "getAttribute", "LASWidgetAttribute;LASILifeCycleDecorator;", &ASBorderViewImpl_LOCAL_NAME };
  static const J2ObjcClassInfo _ASBorderViewImpl = { "BorderViewImpl", "com.ashera.cssborder", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_ASBorderViewImpl;
}

@end

void ASBorderViewImpl_initWithASIWidget_(ASBorderViewImpl *self, id<ASIWidget> widget) {
  NSObject_init(self);
  self->w_ = widget;
}

ASBorderViewImpl *new_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_NEW_IMPL(ASBorderViewImpl, initWithASIWidget_, widget)
}

ASBorderViewImpl *create_ASBorderViewImpl_initWithASIWidget_(id<ASIWidget> widget) {
  J2OBJC_CREATE_IMPL(ASBorderViewImpl, initWithASIWidget_, widget)
}

void ASBorderViewImpl_init(ASBorderViewImpl *self) {
  NSObject_init(self);
}

ASBorderViewImpl *new_ASBorderViewImpl_init() {
  J2OBJC_NEW_IMPL(ASBorderViewImpl, init)
}

ASBorderViewImpl *create_ASBorderViewImpl_init() {
  J2OBJC_CREATE_IMPL(ASBorderViewImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASBorderViewImpl)
